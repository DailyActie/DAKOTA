Blurb::
Start the description of field data from experiments that will be used in calibration. 
Description::
If the user has specified \c field_calibration_terms and wants to provide 
experiment data with which to calibration the field data from the simulations, 
the experiment data is specified in a block starting with \c field_data. 
There are a number of options and we have tried to make it as flexible as possible. 
NOTE:  As of Dakota 6.1, this is a preliminary capability that we are implementing 
and is not available yet. 

  \li format: whether the data files are in \c annotated, or \c freeform format
  \li content: where \c num_experiments, \c
    num_config_variables, and \c sigma_type indicate which
    the number of experiments, the number of configuration variables, and the 
    type of measurement error, respectively. 
  \li files:  There are four types of files which are outlined below.  The 
    files are \c field_data_file which contains the actual responses (the field responses), 
    the \c config_data_file which contains the configuration variable settings, 
    the \c field_coordinate_data_file which contains the independent coordinate 
    data for the experiments (e.g. if the data is time-temperature readings, the 
    field data file contains temperature values and the field coordinate file 
    contains the corresponding time values), and the \c sigma_data_file which contains 
    the measurement error. 

The number of experiments defines how many experiments will be used in the calibration. 
Note that we require separate data files for each experiment in the case of field data. 
The experimental field responses will be stored in .dat files, named: 
	response_descriptor.dat.experiment_num
For example, if the response is voltage as a function of time with the 
field response being named 'voltage', the \c field_data_file = 'voltage.dat' and 
the files will be named 
voltage.dat.1, voltage.dat.2, , etc. to voltage.dat.K, where K is the 
number of experiments. 

For each field calibration data file, there will be J columns of independent 
coordinates followed by the column of field data.   We will check if the 
number of independent coordinate columns is the same as that provided in the
\c calibration_terms section:  if it is not, an error will be thrown.    
We will assume the length of the field calibration data file is the 
number of experimental points.  In the example mentioned above, 
there may be 2000 time-voltage points from the simulation but only 
50 time-voltage points from the experiment. 
To summarize, an example voltage.dat.1 file may look like: 

Time 	Voltage
0.0	0.0

1.0	0.22

2.0	0.32

3.0	0.45

Etc.

If the user has configuration variable values for each experiment, 
these would be specified as:  voltage.config.1, voltage.config.2, etc.   
Each of these files should have \c num_config_variables entries. 
If the user does not want to include coordinate data with the field data 
as the example above, but wants to have separate files for the responses
vs. the coordinates (e.g. separate files for the time and voltage in the 
example above), they can provide the coordinates in voltage.coord.1, voltage.coord.2, 
etc. which is specified by \c config_data_file.

Finally, the experimental measurement error is provided in the
\c sigma_data_file.  For example, this may be something like voltage.sigma.1, 
voltage.sigma.2, etc.  For each experiment, the measurement error will 
be of the type specified by \c sigma_type:  
either NO_SIGMA, SCALAR_SIGMA, or COVARIANCE_MATRIX.  If the user specifies NO_SIGMA, 
Dakota will calculate a sigma term (one constant sigma term across all of the data)
based on the data.  If the user specifies SCALAR_SIGMA, they will provide either 
a constant sigma term across all the data or a vector of sigma terms, where one is 
provided for each measurement.  The SCALAR_SIGMA values will be provided in the 
sigma data file.  If the user specifies COVARIANCE_MATRIX, which is only 
allowed for field data, the user then needs to specify an M-by-M covariance 
matrix, where each element(i,j) of the covariance matrix represents 
the covariance between the i-th and j-th field values. 
 
Topics::
Examples::
Theory::
Faq::
See_Also::

