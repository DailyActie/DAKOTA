Blurb::
A model with one of each block: variable, interface, and response
Description::
The single model is the simplest model type. It uses a single
interface instance (see Chapter~\ref{interfaces}) to map variables
(see Chapter~\ref{variables}) into responses (see
Chapter~\ref{responses}). There is no recursion in this case. Refer
to the Models chapter in the Dakota Reference Manual~\cite{RefMan} for
additional information on the single model specification.

In the \c single model case, a single interface is used to map the variables into responses. The optional \c interface_pointer specification identifies this interface by cross-referencing with the \c id_interface string input from a particular interface keyword specification.

Topics::	not_yet_reviewed
Examples::
The example shows a minimal
specification for a single model, which is the default model when no
models are specified by the user.
\verbatim
model
  single
\endverbatim
This example does not provide any pointer strings and therefore relies
on the default behavior of constructing the model with the last
variables, interface, and responses specifications parsed.

Theory::
Faq::
See_Also::	model-surrogate, model-nested
