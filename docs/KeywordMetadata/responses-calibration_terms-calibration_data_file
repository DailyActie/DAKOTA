Blurb::
Supply calibration data in a text file
Description::

\c calibration_data_file specifies a text file containing data which
Dakota will attempt to match by calibrating the model variables. The
options for it related to either:
  \li format: whether the data file is in \c annotated, or \c freeform format
  \li content: where \c num_experiments, \c
    num_config_variables, and \c num_std_deviations indicate which
    columns appear in the data.

While some components may be omitted, the most complete version of a
an annotated calibration data file could include columns corresponding
to:
\verbatim
index | configuration xvars | y data observations | y data std devs 
\endverbatim

Here each such row in the file corresponds to an experiment or
replicate observation of an experiment to be compared to the model
output.  NOTE:  the \c calibration_data_file is ONLY meant when 
you have scalar calibration terms.  If you have field calibration 
terms, you should use \c field_data and the associated specification 
below it.

<b> Simple case </b>

In the simplest case, no data content descriptors are specified, so
the data file must contain only the \f$ y^{Data} \f$ observations which
represent a single experimental observation.  In this case, the data
file should have \f$ N_{terms} \f$ columns and 1 row, where \f$
N_{terms} \f$ is the value of \ref responses-calibration_terms.

For each function evaluation, Dakota will run the analysis driver,
which must return \f$ N_{terms} \f$ model responses. Then the
residuals are computed as: \f[ R_{i} = y^{Model}_i - y^{Data}_{i}. \f]

These residuals can be weighted using \ref responses-calibration_terms-weights.

<b> With experimental standard deviations </b>

In this case, the keyword \c num_std_deviations is added, where \c
num_std_deviations must be set to 1 or \f$N_{terms} \f$ , where \f$
N_{terms} \f$ is the value of \ref responses-calibration_terms.

If set to 1, each row of the datafile will now have \f$ N_{terms} \f$
y data values followed by 1 experimental standard deviation that will
be used for all \f$ N_{terms} \f$ responses.  If set to \f$ N_{terms}
\f$, each row must contain \f$ N_{terms} \f$ y data values followed by
\f$ N_{terms} \f$ y standard deviations.

Dakota will run the analysis driver, which must return \f$ N_{terms}
\f$ responses. Then the residuals are computed as: 

\f[ R_{i} = \frac{y^{Model}_i - y^{Data}_{i}}{s_i} \f] 

for \f$ i = 1 \dots N_{terms} \f$.  In the case with 1 standard
deviation, \f$ s_i \f$ will be the same for all \f$ i\f$.

<b> Fully general case </b>

In the most general case, the content of the data file is described by
the arguments of four parameters. The parameters are optional, and
defaults are described below.

<ul>
  <li> \c num_experiments ( \f$ N_{exp} \f$ )

    Default: \f$ N_{exp} = N_{terms} \f$ 

    This indicates that the data represents multiple experiments,
    where each experiment might be conducted with different values of
    configuration variables.  An experiment can also be thought 
    of as a replicate, where the experiments are 
    run at the same values of the configuration variables. 
  </li>
  <li> \c num_config_variables ( \f$ N_{cfg} \f$ )

    This is not yet supported, but will specify the values of
    experimental conditions at which data were collected.

  </li>
  <li> \c num_std_deviations ( \f$ N_{std} \f$ )

    Default: \f$ N_{std} = 0 \f$
  </li>
</ul>

The keyword \c num_std_deviations allows the user to specify different
values for the experimental error, i.e., measurement or observation
error in the \c calibration_data_file.  If \c num_std_deviations = 0, the
user does not specify any experimental error terms in the \c
calibration_data_file, only the actual observations are specified. If
the user specifies \c num_std_deviations equal to the number of
calibration terms, then each row of a freeform \c
calibration_data_file must contain two times \c calibration_terms.
The first \c calibration_terms columns are the experimental data, and
the second \c calibration_terms columns are the experimental standard
deviations. For example, if the user has three \c calibration terms,
and specifies \c num_std_deviations = 3, then the calibration data
must contain six columns. The first three columns will contain the
data, and the second three columns will contain the experimental error
for the data in the first three columns. Finally, if the user
specifies \c num_std_deviations = 1, the same value of the standard
deviations will be used for all of the calibration terms. In the
example given above, with three calibration terms, if \c
num_std_deviations = 1, the there would be four columns in the \c
calibration_data_file, and the fourth column would contain the
standard deviation that would be applied to all three calibration
columns. Note that the standard deviations are given in units of a
standard deviation or sigma term, not a variance term. These standard
deviations are used to weight the residuals in the sum-of-squares
objective.

A more advanced use of the \c calibration_data_file might specify \c
num_experiments \f$ N_E \f$ 
indicating that there are multiple experiments.
When multiple experiments are present, %Dakota will expand the number of residuals
for the repeat measurement data and difference with the data
accordingly. For example, if the user has five experiments
in the example above with three calibration
terms, the \c calibration_data_file would need to contain five rows
(one for each experiment), and each row should contain three
experimental data values that will be differenced with respect to the
appropriate model response. In this example, \f$ N_E = 5 \f$.
To summarize, %Dakota
will calculate the sum of the squared residuals as: \f[f =
\sum_{i=1}^{N_E}R_{i}^2\f] where the residuals
now are calculated as: \f[R_{i} = y^{Model}_i(\theta) - y^{Data}_{i}. \f]


Topics::	
Examples::
Theory::
Faq::
See_Also::	
