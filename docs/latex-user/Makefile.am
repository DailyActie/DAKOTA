## Process this file with automake to produce 'Makefile.in'.

## Paths
USERS_PATH = $(top_srcdir)/../docs/latex-user

USERS_GENERIC_PATH = $(top_srcdir)/../examples/script_interfaces/generic

USERS_TEST_PATH = $(top_srcdir)/../test

## Input files generated by nth test extraction capability of dakota_test.perl.
## Extraction is still used even if only one test, since this prunes comments.
USERS_TEST_INPUTS = dakota_rosenbrock_2d.in \
		    dakota_rosenbrock_vector.in \
		    dakota_rosenbrock_grad_opt.in \
		    dakota_textbook.in \
		    dakota_rosenbrock_ls.in \
		    dakota_rosenbrock_ps_opt.in \
		    dakota_rosenbrock_ea_opt.in \
		    dakota_mogatest1.in \
		    dakota_rosenbrock_nond.in \
                    dakota_mv.in \
		    dakota_pce.in \
                    dakota_uq_interval.in \
		    dakota_rosenbrock_syscall.in \
		    dakota_uq_sampling.in \
		    dakota_uq_reliability.in \
                    dakota_sc.in \
		    dakota_uq_textbook_dste.in \
		    dakota_multiobj1.in \
		    dakota_rosenbrock_scaled.in \
		    dakota_sbo_rosen.in \
		    dakota_su_mogatest1.in \
		    dakota_rosenbrock_ego.in \
		    dakota_hybrid.in \
		    dakota_multistart.in \
		    dakota_pareto.in \
		    dakota_uq_cantilever_sop_rel.in \
		    dakota_ouu1_tb.in \
		    dakota_container.in \
		    dakota_rosenbrock.in \
		    dakota_addtnl_rosen_opt.in \
		    dakota_addtnl_rosen_ls.in \
		    dakota_addtnl_cylhead.in \
		    dakota_addtnl_cantilever.in \
		    dakota_mogatest2.in \
		    dakota_mogatest3.in

## Inputs coming from examples/script_interfaces/generic (blackbox)
USERS_GENERIC_INPUTS = dakota_rosenbrock.in \
		       simulator_script \
		       dprepro_head \
		       ros.template

DAKOTA_TEST_PERL = $(USERS_TEST_PATH)/dakota_test.perl

# LaTeX sources and dependencies for the User's Manual.
USERS_SOURCES = Users_Preface.tex \
		Users_Intro.tex \
		Users_Tutorial.tex \
		Users_Capabilities.tex \
		Users_Method_PStudy.tex \
		Users_Method_DACE.tex \
		Users_Method_UQ.tex \
		Users_Method_Opt.tex \
		Users_Method_NLS.tex \
		Users_Method_SurrBased.tex \
		Users_Strategy.tex \
		Users_Models.tex \
		Users_Variables.tex \
		Users_Interface.tex \
		Users_Responses.tex \
		Users_Input.tex \
		Users_Output.tex \
		Users_Advanced_Interfaces.tex \
		Users_Parallel.tex \
		Users_Guidance.tex \
		Users_Restart.tex \
		Users_Failure_Capturing.tex \
		Users_Additional_Examples.tex \
		Users.bib

USERS_EPS = images/dakota_flowchart.eps \
	    images/rosen_3d_surf.eps \
	    images/rosen_2d_surf.eps \
	    images/textbook_contours.eps \
	    images/textbook_closeup.eps \
	    images/rosen_2d_pts.eps \
	    images/dak_graphics_vector.eps \
	    images/rosen_vect_pts.eps \
	    images/dak_graphics_grad_opt.eps \
	    images/rosen_grad_opt_pts.eps \
	    images/textbook_opt_hist.eps \
	    images/textbook_history.eps \
	    images/nonlin_paramest_hist.eps \
	    images/dak_graphics_ps_opt.eps \
	    images/rosen_ps_opt_pts.eps \
	    images/rosen_ps_opt_pts2.eps \
	    images/rosen_ea_init.eps \
	    images/rosen_ea_final.eps \
	    images/dakota_mogatest1_pareto_front.eps \
	    images/rosen_nond_pts.eps \
	    images/rosen_pce_pts.eps \
	    images/centered_pstudy.eps \
	    images/multi_d_pstudy.eps \
	    images/lhs_graphic.eps \
	    images/input_samples5.eps \
	    images/input_samples10.eps \
	    images/cdf_orig_graphic.eps \
	    images/cdf_tran_graphic.eps \
	    images/cdf_form.eps \
	    images/isogrid_N2_q6.eps \
	    images/rosen_sc_pts.eps \
	    images/belief_plaus.eps \
	    images/filter.eps \
	    images/tau_updates.eps \
	    images/sbo_df.eps \
	    images/sbo_mh.eps \
	    images/branch_history.eps \
	    images/classDakota_1_1Model.eps \
	    images/nested_ouu.eps \
	    images/sbouu.eps \
	    images/dakota_components.eps \
##	    images/jag_package.eps \
##	    images/jag_welcome.eps \
##	    images/jag_cheatsheets.eps \
##	    images/jag_texteditor.eps \
##	    images/jag_graphical1.eps \
##	    images/jag_graphical2.eps \
	    images/jag_graphical3.eps \
##	    images/jag_graphical4.eps \
##	    images/jag_graphical5.eps \
##          images/jaguar_pushup_on.eps \
##          images/jaguar_pushup_off.eps \
            images/jaguar_toolbar.eps \
	    images/jag_execute.eps \
	    images/jaguar_visualize.eps \
	    images/jaguar_sa_wizard.eps \
	    images/jag_wizard3.eps \
	    images/jag_wizard4.eps
	    images/jaguar_sa_post_run.eps \
##	    images/jag_template1.eps \
##	    images/jag_template2.eps \
	    images/container_graphic.eps \
	    images/container_graphic_options.eps \
	    images/sbo_3d_surface.eps \
	    images/ex_in_hy_job_management.eps \
	    images/comm_partitioning.eps \
	    images/mss_rel_speedup_3lev_determ.eps \
	    images/mss_rel_eff_3lev_determ.eps \
	    images/recursive_partitioning.eps \
	    images/end_cap.eps \
	    images/graphical_container_opt.eps \
	    images/log_ratio_cdf_ria.eps \
	    images/log_ratio_cdf_pma.eps \
	    images/short_col_cdf_ria.eps \
	    images/short_col_cdf_pma.eps \
	    images/cantilever_beam.eps \
	    images/dakota_mogatest2_pareto_front.eps \
	    images/dakota_mogatest3_pareto_front.eps \
	    images/dakota_mogatest3_pareto_set.eps \
	    images/moat_mustar_sigma.eps

USERS_PNG = $(USERS_EPS:.eps=.png)

USERS_INPUTS = $(USERS_TEST_INPUTS) $(USERS_GENERIC_INPUTS)

pdf-local: Users_Main.tex $(USERS_SOURCES) $(USERS_PNG) $(USERS_INPUTS)
	-rm -f $(basename $<).log
	-$(pdflatex) $<
	-$(bibtex) $(basename $<) 
	-$(pdflatex) $<
	-@latex_count=5 ; \
	while egrep -s 'Rerun (LaTeX|to get cross-references right)' $(basename $<).log && [ $$latex_count -gt 0 ] ;\
	    do \
	      echo "*** Re-running pdfLaTeX to resolve references ***" ;\
	      $(pdflatex) $< ;\
	      latex_count=`expr $$latex_count - 1` ;\
	    done

ps-local: Users_Main.ps

Users_Main.ps: Users_Main.dvi
	-$(dvips) -o $@ $<

Users_Main.dvi: dvi-local

dvi-local: Users_Main.tex $(USERS_SOURCES) $(USERS_EPS) $(USERS_INPUTS)
	-rm -f $(basename $<).log
	-$(latex) $<
	-$(bibtex) $(basename $<) 
	-$(latex) $<
	-@latex_count=5 ; \
	while egrep -s 'Rerun (LaTeX|to get cross-references right)' $(basename $<).log && [ $$latex_count -gt 0 ] ;\
	    do \
	      echo "*** Re-running LaTeX to resolve references ***" ;\
	      $(latex) $< ;\
	      latex_count=`expr $$latex_count - 1` ;\
	    done


## Anywhere there's a chance of extracting two or more tests from the
## same input file, disable parallel make.
.NOTPARALLEL: $(USERS_TEST_INPUTS)

## DAKOTA input files originally from test/; 
## *** Organized by User's Manual chapter ***

## Users_Tutorial.tex
dakota_rosenbrock_2d.in: $(USERS_TEST_PATH)/dakota_rosenbrock_users.in
	-$(DAKOTA_TEST_PERL) extract $< 0
	-mv $<_ $@

dakota_rosenbrock_vector.in: $(USERS_TEST_PATH)/dakota_rosenbrock_users.in
	-$(DAKOTA_TEST_PERL) extract $< 1
	-mv $<_ $@

dakota_rosenbrock_grad_opt.in: $(USERS_TEST_PATH)/dakota_rosenbrock_users.in
	-$(DAKOTA_TEST_PERL) extract $< 2
	-mv $<_ $@

dakota_textbook.in: $(USERS_TEST_PATH)/dakota_textbook.in
	-$(DAKOTA_TEST_PERL) extract $< 9
	-mv $<_ $@

dakota_rosenbrock_ls.in: $(USERS_TEST_PATH)/dakota_rosenbrock_users.in
	-$(DAKOTA_TEST_PERL) extract $< 8
	-mv $<_ $@

dakota_rosenbrock_ps_opt.in: $(USERS_TEST_PATH)/dakota_rosenbrock_users.in
	-$(DAKOTA_TEST_PERL) extract $< 4
	-mv $<_ $@

dakota_rosenbrock_ea_opt.in: $(USERS_TEST_PATH)/dakota_rosenbrock_users.in
	-$(DAKOTA_TEST_PERL) extract $< 5
	-mv $<_ $@

dakota_mogatest1.in: $(USERS_TEST_PATH)/dakota_mogatest.in
	-$(DAKOTA_TEST_PERL) extract $< 0
	-mv $<_ $@

dakota_rosenbrock_nond.in: $(USERS_TEST_PATH)/dakota_rosenbrock_users.in
	-$(DAKOTA_TEST_PERL) extract $< 6
	-mv $<_ $@

dakota_mv.in: $(USERS_TEST_PATH)/dakota_mv.in
	-$(DAKOTA_TEST_PERL) extract $< 0
	-mv $<_ $@

dakota_pce.in: $(USERS_TEST_PATH)/dakota_uq_rosenbrock_pce.in
	-$(DAKOTA_TEST_PERL) extract $< 1
	-mv $<_ $@

dakota_uq_interval.in: $(USERS_TEST_PATH)/dakota_uq_cantilever_interval.in
	-$(DAKOTA_TEST_PERL) extract $< 0
	-mv $<_ $@

dakota_rosenbrock_syscall.in: $(USERS_TEST_PATH)/dakota_rosenbrock_users.in
	-$(DAKOTA_TEST_PERL) extract $< 7
	-mv $<_ $@

## Users_Method_UQ.tex
dakota_uq_sampling.in: $(USERS_TEST_PATH)/dakota_uq_users.in
	-$(DAKOTA_TEST_PERL) extract $< 0
	-mv $<_ $@

dakota_uq_reliability.in: $(USERS_TEST_PATH)/dakota_logratio.in
	-$(DAKOTA_TEST_PERL) extract $< 5
	-mv $<_ $@

dakota_sc.in: $(USERS_TEST_PATH)/dakota_uq_rosenbrock_sc.in
	-$(DAKOTA_TEST_PERL) extract $< 36
	-mv $<_ $@

dakota_uq_textbook_dste.in: $(USERS_TEST_PATH)/dakota_uq_textbook_dste.in
	-$(DAKOTA_TEST_PERL) extract $< 0
	-mv $<_ $@

## Users_Method_Opt.tex
dakota_multiobj1.in: $(USERS_TEST_PATH)/dakota_multiobj1.in
	-$(DAKOTA_TEST_PERL) extract $< 0
	-mv $<_ $@

dakota_rosenbrock_scaled.in: $(USERS_TEST_PATH)/dakota_rosenbrock_users.in
	-$(DAKOTA_TEST_PERL) extract $< 9
	-mv $<_ $@

## Users_Models.tex
dakota_sbo_rosen.in: $(USERS_TEST_PATH)/dakota_sbo_rosen.in
	-$(DAKOTA_TEST_PERL) extract $< 0
	-mv $<_ $@

dakota_su_mogatest1.in: $(USERS_TEST_PATH)/dakota_su_mogatest1.in
	-$(DAKOTA_TEST_PERL) extract $< 0
	-mv $<_ $@

dakota_rosenbrock_ego.in: $(USERS_TEST_PATH)/dakota_rosenbrock_ego.in
	-$(DAKOTA_TEST_PERL) extract $< 0
	-mv $<_ $@

## Users_Strategy.tex
dakota_hybrid.in: $(USERS_TEST_PATH)/dakota_hybrid.in
	-$(DAKOTA_TEST_PERL) extract $< 0
	-mv $<_ $@

dakota_multistart.in: $(USERS_TEST_PATH)/dakota_multistart.in
	-$(DAKOTA_TEST_PERL) extract $< 0
	-mv $<_ $@

dakota_pareto.in: $(USERS_TEST_PATH)/dakota_pareto.in
	-$(DAKOTA_TEST_PERL) extract $< 0
	-mv $<_ $@

#dakota_bandb.in: $(USERS_TEST_PATH)/dakota_bandb.in
#	-$(DAKOTA_TEST_PERL) extract $< 0
#	-mv $<_ $@

dakota_uq_cantilever_sop_rel.in: \
$(USERS_TEST_PATH)/dakota_uq_cantilever_sop_rel.in
	-$(DAKOTA_TEST_PERL) extract $< 0
	-mv $<_ $@

dakota_ouu1_tb.in: $(USERS_TEST_PATH)/dakota_ouu1_tb.in
	-$(DAKOTA_TEST_PERL) extract $< 0
	-mv $<_ $@

## Users_Output.tex
dakota_container.in: $(USERS_TEST_PATH)/dakota_container.in
	-$(DAKOTA_TEST_PERL) extract $< 0
	-mv $<_ $@

## Users_Advanced_Interfaces.tex
## (DAKOTA input files and scripts originally from tutorial/blackbox):
dakota_rosenbrock.in: $(USERS_GENERIC_PATH)/dakota_rosenbrock.in
	-$(LN_S) $< $@

simulator_script: $(USERS_GENERIC_PATH)/simulator_script
	-$(LN_S) $< $@

dprepro_head: $(USERS_GENERIC_PATH)/dprepro
	-head -47 $< > $@

ros.template: $(USERS_GENERIC_PATH)/templatedir/ros.template
	-$(LN_S) $< $@

## Users_Additional_Examples.tex
dakota_addtnl_rosen_opt.in: $(USERS_TEST_PATH)/dakota_addtnl_users.in
	-$(DAKOTA_TEST_PERL) extract $< 0
	-mv $<_ $@

dakota_addtnl_rosen_ls.in: $(USERS_TEST_PATH)/dakota_addtnl_users.in
	-$(DAKOTA_TEST_PERL) extract $< 1
	-mv $<_ $@

dakota_addtnl_cylhead.in: $(USERS_TEST_PATH)/dakota_addtnl_users.in
	-$(DAKOTA_TEST_PERL) extract $< 4
	-mv $<_ $@

dakota_addtnl_cantilever.in: $(USERS_TEST_PATH)/dakota_addtnl_users.in
	-$(DAKOTA_TEST_PERL) extract $< 5
	-mv $<_ $@

dakota_mogatest2.in: $(USERS_TEST_PATH)/dakota_mogatest.in
	-$(DAKOTA_TEST_PERL) extract $< 1
	-mv $<_ $@

dakota_mogatest3.in: $(USERS_TEST_PATH)/dakota_mogatest.in
	-$(DAKOTA_TEST_PERL) extract $< 2
	-mv $<_ $@

## Files to be removed on 'make clean'.
CLEANFILES = *.aux *.bbl *.blg *.brf *.dvi *.idx *.log *.out *.pdf *.ps *.toc
clean-local:
	-rm -f $(USERS_INPUTS)

## Files to be removed on 'make maintainer-clean'.
MAINTAINERCLEANFILES = Makefile.in

## These files need to be distributed.
EXTRA_DIST = $(USERS_SOURCES) $(USERS_EPS) $(USERS_PNG) bigbox.sty
