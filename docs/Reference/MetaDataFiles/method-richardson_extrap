Blurb::
Description::
Solution verification procedures estimate the order of convergence of
the simulation response data during the course of a refinement study.
This branch of methods is new and currently only contains one algorithm:
Richardson extrapolation.

This method utilizes state variables as active variables (continuous
state only at this time; discrete state to follow later) for
parameterizing the refinement of the discretizations, and employs the
\c max_iterations and \c convergence_tolerance method independent
controls to manage the iterative procedures.  The refinement path is
determined from the \c initial_state of the \c continuous_state
variables specification (refer to \ref VarSV) in combination with the
\c refinement_rate, where each of the state variables is treated as an
independent refinement factor and each of the initial state values is
repeatedly divided by the refinement rate value to define new
discretization states.  Three algorithm options are currently provided:

-# The \c estimate_order option is the simplest option.  For each of
   the refinement factors, it evaluates three points along the
   refinement path and uses these results to perform an estimate of
   the convergence order for each response function.

-# The \c converge_order option is initialized using the \c
   estimate_order aproach, and additional refinements are performed
   along the refinement path until the convergence order estimates
   converge (two-norm of the change in response orders is less than
   the convergence tolerance).

-# The \c converge_qoi option is similar to the \c converge_order
   option, except that the convergence criterion is that the two-norm
   of the response discretization errors (computed from extrapolation)
   must be less than the convergence tolerance.

In each of these cases, convergence order for a response quantity of 
interest (QOI) is estimated from
\f[p = ln(\frac{QOI_3 - QOI_2}{QOI_2 - QOI_1})/ln(r)\f]
where \f$r\f$ is the uniform refinement rate specified by \c 
refinement_rate.


Topics::	not_yet_reviewed
Examples::
Theory::
Faq::
See_Also::	
