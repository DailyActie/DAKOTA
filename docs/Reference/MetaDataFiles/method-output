Blurb::
Control how much method information is written to the screen and output file. (IS THIS CORRECT??)
Description::
Output verbosity control is specified with \c output followed by \c silent, \c quiet, \c verbose or \c debug. 
If there is no user specification for output verbosity, then the default setting is \c normal. 
This gives a total of five output levels to manage the volume of data that is returned to the user during the course of a study, ranging from full run annotation plus internal debug diagnostics (\c debug) to the bare minimum of output containing little more than the total number of simulations performed and the final solution (\c silent). 
Output verbosity is observed within the Iterator (algorithm verbosity), Model (synchronize/fd_gradients verbosity), Interface (map/synch verbosity), Approximation (global data fit coefficient reporting),and AnalysisCode (file operation reporting) class hierarchies; however, not all of these software components observe the full granularity of verbosity settings. 

Specific mappings are as follows:

\li \c output \c silent (i.e., really quiet):
  silent iterators, silent model, silent interface, quiet approximation,
  quiet file operations
\li \c output \c quiet:
  quiet iterators, quiet model, quiet interface, quiet approximation,
  quiet file operations
\li \c output \c normal:
  normal iterators, normal model, normal interface, quiet approximation,
  quiet file operations
\li \c output \c verbose:
  verbose iterators, normal model, verbose interface, verbose approximation,
  verbose file operations
\li \c output \c debug (i.e., really verbose):
  debug iterators, normal model, debug interface, verbose approximation,
  verbose file operations

Note that iterators and interfaces utilize the full granularity in verbosity, whereas models, approximations, and file operations do not. 
With respect to iterator verbosity, different iterators implement this control in slightly different ways (as described below in the method independent controls descriptions for each iterator), however the meaning is consistent. 
For models, interfaces, approximations, and file operations, \c quiet suppresses parameter and response set reporting and \c silent further suppresses function evaluation headers and scheduling output. Similarly, \c verbose adds file management, approximation evaluation, and global approximation coefficient details, and \c debug further adds diagnostics from nonblocking schedulers.

Topics:: problem, dakota_output, not_yet_reviewed
Examples::
Theory::
Faq::
See_Also::	
