Blurb::
Squential Quadratic Program
Description::
Dakota's least squares branch currently contains three methods for
solving nonlinear least squares problems: NL2SOL, a trust-region
method that adaptively chooses between two Hessian approximations
(Gauss-Newton and Gauss-Newton plus a quasi-Newton approximation to
the rest of the Hessian), NLSSOL, a sequential quadratic programming
(SQP) approach that is from the same algorithm family as NPSOL, and
Gauss-Newton, which supplies the Gauss-Newton Hessian approximation to
the full-Newton optimizers from OPT++.

The important difference of these algorithms from general-purpose
optimization methods is that the response set is defined by calibration 
terms (e.g. separate terms for each residual), 
rather than an objective function.  Thus, a finer
granularity of data is used by least squares solvers as compared to
that used by optimizers.  This allows the exploitation of the special
structure provided by a sum of squares objective function. Refer to
\ref RespFnLS for additional information on the least squares response
data set.

NLSSOL is available as \c nlssol_sqp and supports unconstrained,
bound-constrained, and generally-constrained problems.  It exploits
the structure of a least squares objective function through the
periodic use of Gauss-Newton Hessian approximations to accelerate the
SQP algorithm. 

The method independent and method dependent
controls are identical to those of NPSOL as described in \ref
MethodNPSOLIC and \ref MethodNPSOLDC.

The method independent controls for \c max_iterations and \c
max_function_evaluations limit the number of major SQP iterations and
the number of function evaluations that can be performed during an
NPSOL optimization. The \c convergence_tolerance control defines
NPSOL's internal optimality tolerance which is used in evaluating if
an iterate satisfies the first-order Kuhn-Tucker conditions for a
minimum. The magnitude of \c convergence_tolerance approximately
specifies the number of significant digits of accuracy desired in the
final objective function (e.g., \c convergence_tolerance = \c 1.e-6
will result in approximately six digits of accuracy in the final
objective function). The \c constraint_tolerance control defines how
tightly the constraint functions are satisfied at convergence. The
default value is dependent upon the machine precision of the platform
in use, but is typically on the order of \c 1.e-8 for double precision
computations. Extremely small values for \c constraint_tolerance may
not be attainable. The \c output verbosity setting controls the amount
of information generated at each major SQP iteration: the \c silent
and \c quiet settings result in only one line of diagnostic output for
each major iteration and print the final optimization solution,
whereas the \c verbose and \c debug settings add additional
information on the objective function, constraints, and variables at
each major iteration.

Topics::	squential_quadratic_programming, not_yet_reviewed
Examples::
Theory::
Faq::
See_Also::	method-npsol_sqp, method-nl2sol, method-optpp_g_newton
