Blurb::
Description::
As mentioned above, when performing interval analysis, 
one assumes that nothing is known about
an epistemic uncertain variable except that its value lies
somewhere within an interval.  The goal of uncertainty quantification 
in this context is to determine the 
resulting bounds on the output (defining the output interval)
given interval bounds on the inputs. 

In the global approach, one uses either a global optimization
method or a sampling method to assess the bounds.
\c global_interval_est
allows the user to specify several approaches to calculate 
interval bounds on the output responses. \c lhs performs
Latin Hypercube Sampling and takes the minimum and maximum of
the samples as the bounds (no optimization is
performed).  In the \c ego approach,
the efficient global optimization (EGO) method is used to calculate
bounds (see the EGO method on this page for more explanation).  By
default, the Surfpack GP (Kriging) model is used, but the %Dakota
implementation may be selected instead.  If \c use_derivatives is
specified the GP model will be built using available derivative data
(Surfpack GP only). If using \c sbo, a surrogate-based optimization
method will be used to find the interval bounds.  The surrogate used 
in \c sbo is a Gaussian process 
surrogate.  The main difference between \c ego and the 
\c sbo approach is the objective function that is used in the 
optimization. 
\c ego relies on an expected improvement function, while in 
\c sbo, the optimization proceeds using an evolutionary 
algorithm (\c coliny_ea described above) on the 
Gaussian process surrogate:  it is a standard surrogate-based
optimization.  Also note that the \c sbo option can support 
optimization over discrete variables (the discrete variables 
are relaxed) while \c ego cannot.  Finally, there is the 
\c ea approach.  In this approach, the evolutionary algorithm 
from Coliny (\c coliny_ea) is used to perform the interval optimization 
with no surrogate model involved. Again, this option of \c ea
can support interval optimization over discrete variables. 
When using \c lhs, \c ego, or \c sbo,
one can specify a seed for the number of LHS samples, the random
number generator, and the number of samples. The \c ea
option allows the seed to be specified.  

Topics::	not_yet_reviewed
Examples::
Theory::
Faq::
See_Also::	method-global_evidence, method-local_evidence, method-local_interval_est
