Blurb::
Strategy in which a set of methods synergistically seek an optimal design
Description::
The hybrid minimization strategy has \c sequential,\c embedded, and 
\c collaborative approaches (see the Users
Manual [\ref UsersMan "Adams et al., 2010"] for more information on
the algorithms employed). In the sequential approach, the best
solutions are transferred from one method to the next through a
specified sequence. In the embedded approach, a tightly-coupled
hybrid is employed in which a subordinate local method provides
periodic refinements to a top-level global method. And in the
collaborative approach, multiple methods work together and share
solutions while executing concurrently.

In the \c sequential approach, a list of method strings supplied
with the \c method_list specification specifies the identity and
sequence of iterators to be used. Any number of iterators may be
specified. In the sequential approach, method switching
is managed through the separate convergence controls of each
method. The number of solutions transferred between methods is specified 
by the particular method through its \c final_solutions method 
control. For example, if one sets up a two-level
strategy with a first method that generates multiple solutions such as
a genetic algorithm, followed by a second method that is initialized
only at a single point such as a gradient-based algorithm, it is
possible to take the multiple solutions generated by the first method
and create several instances of the second method, each one with a
different initial starting point. The logic governing the transfer of
multiple solutions between methods is as follows: if one solution is
returned from method A, then one solution is transferred to method B.
If multiple solutions are returned from method A, and method B can
accept multiple solutions as input (for example, as a genetic
algorithm population), then one instance of method B is initialized
with multiple solutions. If multiple solutions are returned from
method A but method B only can accept one initial starting point, then
method B is run several times, each one with a separate starting point from 
the results of method A. 

In the \c embedded approach, global and local method strings supplied
with the \c global_method_pointer and \c local_method_pointer
specifications identify the two methods to be used. The \c
local_search_probability setting is an optional specification for
supplying the probability (between 0.0 and 1.0) of employing local
search to improve estimates within the global search. 


Topics::	not_yet_reviewed
Examples::
Theory::
Faq::
See_Also::	
