Blurb::
Description::
The optional
\c analysis_components specification allows the user to provide
additional identifiers (e.g., mesh file names) for use by the analysis
drivers.  This is particularly useful when the same analysis driver is
to be reused multiple times for slightly different analyses.  The
specific content within the strings is open-ended and can involve
whatever syntax is convenient for a particular analysis driver.  The
number of analysis components \f$n_c\f$ should be an integer multiple
of the number of drivers \f$n_d\f$, and the first \f$n_c/n_d\f$
component strings will be passed to the first driver, etc.  The
optional \c input_filter and \c output_filter specifications provide
the names of separate pre- and post-processing programs or scripts
which assist in mapping %Dakota parameters files into analysis input
files and mapping analysis output files into %Dakota results files,
respectively.  If there is only a single analysis driver, then it is
usually most convenient to combine pre- and post-processing
requirements into a single analysis driver script and omit the
separate input and output filters. However, in the case of multiple
analysis drivers, the input and output filters provide a convenient
location for non-repeated pre- and post-processing requirements.  That
is, input and output filters are only executed once per function
evaluation, regardless of the number of analysis drivers, which makes
them convenient locations for data processing operations that are
shared among the analysis drivers.

Topics::	not_yet_reviewed
Examples::
Theory::
Faq::
See_Also::	
