#@ p0: MPIProcs=2
#@ p1: MPIProcs=3

#environment,
#	graphics

method,
	model_pointer = 'HIERARCH'
        multilevel_sampling				
	  pilot_samples = 20 seed = 1237
#	  max_iterations = 0
	  convergence_tolerance =    .1			#s0,#s2
#	  convergence_tolerance =   .01			#s1,#s3
#	  convergence_tolerance =  .001			# too expensive
#	  convergence_tolerance = .0001			# too expensive
	output silent

model,
	id_model = 'HIERARCH'
	variables_pointer = 'HF_VARS'
	surrogate hierarchical
	  ordered_model_fidelities = 'LF' 'HF'
	  correction additive zeroth_order

model,
	id_model = 'LF'
	variables_pointer = 'LF_VARS'
	simulation
	  solution_level_control = 'dssiv_1'
# dense matrices --> direct solvers --> cubic cost growth
#   cos64 -> exp16: 64x for 4^3, 10x assumed for kernel
#   cos64 -> cos4:  4096x for 16^3
	  solution_level_cost = 6.4			#s0,#s1
#	  solution_level_cost = 1.			#s2,#s3

model,
	id_model = 'HF'
	variables_pointer = 'HF_VARS'
	simulation
	  solution_level_control = 'dssiv_1'
	  solution_level_cost = 4096. # MLMC cost for cosine64

variables,
	id_variables = 'LF_VARS'
	uniform_uncertain = 9	 # number of cosine terms in soln expansion
	  lower_bounds    = 9*-1.
	  upper_bounds    = 9* 1.
	discrete_state_set
# LF = exp16 case tests different model forms
# LF = cos4 case tests the extreme values of the discretization levels 
	  integer = 1 # even poly degree for odd mesh pts including boundary
	    initial_state = 16	  	     	 #s0,#s1
	    set_values = 16	     	 	 #s0,#s1
#	    initial_state = 4	  	     	 #s2,#s3
#	    set_values = 4	     	 	 #s2,#s3
	  string = 1  # form of kernel (refer to Yang,Lei,Baker,Lin)
	    initial_state = 'exponential'	 #s0,#s1
#	    initial_state = 'cosine'	 	 #s2,#s3
            set_values = 'cosine' 'exponential' # TO DO: 'gaussian'

variables,
	id_variables = 'HF_VARS'
	uniform_uncertain = 9	 # number of cosine terms in soln expansion
	  lower_bounds    = 9*-1.
	  upper_bounds    = 9* 1.
	discrete_state_set
	  integer = 1 # even poly degree for odd mesh pts including boundary
	    initial_state = 64
            set_values = 64
	  string = 1  # form of kernel (refer to Yang,Lei,Baker,Lin)
	    initial_state = 'cosine'
            set_values = 'cosine' 'exponential' # TO DO: 'gaussian'

interface,
	direct
	  analysis_driver = 'steady_state_diffusion_1d'

responses,
	response_functions = 3	 # number of soln pts excl. +/-5% (symmetric)
	no_gradients
	no_hessians
