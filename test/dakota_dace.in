# DAKOTA INPUT FILE : dakota_dace.in

# Each DAKOTA test file is capable of running multiple tests. The
# manual process for doing this is to add or uncomment specific lines
# needed for a test and comment out other lines which are not needed
# for that specific test.  Within the automatic test script, a special
# syntax is used to automatically determine which lines are to be used
# for a specific test. A #n (0 - 9) is used to associate lines in the
# test file with a specific test.  The #0 is used to designate lines
# which are to be run as part of the baseline test but not part of the
# other tests. To add multiple tests to a file add the #n to the
# trailing comment of a line, the dakota_test script will parse
# through the file uncommenting the lines marked for a specific test,
# and commenting out unneeded lines marked with the #0. Specific lines
# can be included in multiple tests by adding multiple #n designaters
# seperated by a comma.

# Processor specification for automated parallel tests:
# p0=4, p1=4, p2=4, p3=5

strategy,
	single_method
	  graphics
	  tabular_graphics_data

method,
	dace oas seed = 5		#0,#8,#p0,#p1,#p2,#p3
#       dace oa_lhs seed = 5            #9
	  samples = 49 symbols = 7 	#0,#8,#9,#p0,#p1,#p2,#p3
#	dace lhs seed = 5		#1
#	  samples = 50 symbols = 50	#1
#	fsu_quasi_mc hammersley		#2,#3
#	fsu_quasi_mc halton		#4,#5
#	fsu_cvt				#6,#7
#	  samples = 100			#2,#3,#4,#5,#6,#7
#	  latinize			#3,#5,#7
	  quality_metrics		#0,#3,#5,#7
#	  sequence_start 0 0 0 0	#2,#3,#4,#5
#	  sequence_leap  1 1 1 1	#2,#3,#4,#5
#	  prime_base   3 5 7		#2
#	  prime_base 2 3 5 7  		#4
#  	  seed = 50374 fixed_seed	#6,#7
#	  num_trials = 10000		#6,#7
#	  max_iterations = 100		#6,#7
	  output quiet

variables,
	continuous_design = 3
	  initial_point       1.0 1.0 1.0
	  lower_bounds        0.0 0.0 0.0
	  upper_bounds        2.0 2.0 2.0
	continuous_state = 1
	  initial_state       4.0
	  lower_bounds        0.0
	  upper_bounds        8.0
#	discrete_design_set_integer = 2		#8
#	  num_set_values = 4 5	      		#8
#	  set_values = -4 -3 -2 -1 0 1 2 3 4	#8

interface,
	id_interface = 'I1'
#	evaluation_self_scheduling
#	evaluation_static_scheduling	#p1
	system
	  asynchronous			#0,#1,#2,#3,#4,#5,#6,#7,#8,#9,#p2,#p3
	    evaluation_concurrency = 5	#0,#1,#2,#3,#4,#5,#6,#7,#8,#9,#p2
#	    evaluation_concurrency = 10	#p3
	  analysis_driver = 'text_book'

responses,
	objective_functions = 1
	nonlinear_inequality_constraints = 2
	no_gradients
	no_hessians
