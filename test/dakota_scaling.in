# DAKOTA INPUT FILE - dakota_scaling.in
# run tests with various scaling options for each class of optimizer
#  - test scaling options for cdv, nonlinear constraints, linear constraints,
#    functions and least squares terms
#  - test modes user, auto, log, and none for each of these
#  - inputs are like cyl_head (for most optimizers), mogatest (3, for JEGA),
#    and textbook (for LSQ)

# Each DAKOTA test file is capable of running multiple tests. The
# manual process for doing this is to add or uncomment specific lines
# needed for a test and comment out other lines which are not needed
# for that specific test.  Within the automatic test script, a special
# syntax is used to automatically determine which lines are to be used
# for a specific test. A #n (0 - 9) is used to associate lines in the
# test file with a specific test.  The #0 is used to designate lines
# which are to be run as part of the baseline test but not part of the
# other tests. To add multiple tests to a file add the #n to the
# trailing comment of a line, the dakota_test script will parse
# through the file uncommenting the lines marked for a specific test,
# and commenting out unneeded lines marked with the #0. Specific lines
# can be included in multiple tests by adding multiple #n designaters
# seperated by a comma.

# timeout overrides: 12=TD300, 13=TD300

#=======================================================================
method,
	scaling
# OPT and MULTIOBJ formulations to run with cyl_head
	conmin_mfd			#0,#1
#	dot_sqp				#2,#3
#	npsol_sqp			#4,#5,#20
#	optpp_q_newton			#6,#7
#	  merit_function = 'el_bakry'	#6,#7
#	coliny_direct			#8,#9,#21
#	  division major_dimension      #8,#9,#21
	  convergence_tolerance = 1e-8	#0,#1,#2,#3,#4,#5,#6
#	  convergence_tolerance = 1e-8	#7,#8,#9,#20,#21
	linear_inequality_constraint_matrix = 1. 1.	#0,#4,#6
	linear_inequality_upper_bounds = 3.7         	#0,#4,#6
	linear_inequality_scale_types = 'auto'		#0
#	linear_inequality_scale_types = 'none'		#4
#	linear_inequality_scale_types = 'value'		#6
#	  linear_inequality_scales    = 1.9		#6
#	linear_equality_constraint_matrix = 1. 1.    	#2,#5,#7
#	linear_equality_targets = 3.7                 	#2,#5,#7
#	linear_equality_scale_types = 'value'		#2
#	  linear_equality_scales = 2.1			#2
#	linear_equality_scale_types = 'none'		#5
#	linear_equality_scale_types = 'auto'		#7
#-----------------------------------------------------------------------
# OPT tests with hessian formulations and log scaled functions
#	optpp_newton			#10,#11
#	  max_iterations = 50		#10,#11
#	  convergence_tolerance = 1e-4	#10,#11
#-----------------------------------------------------------------------
# JEGA optimization formulations based on dakota_mogatest.in/2
#       moga     						#12,#13
#	output silent						#12,#13
#       seed = 10983                              		#12,#13
#       final_solutions = 2					#12,#13
#	max_function_evaluations = 2000				#12,#13
#	initialization_type unique_random			#12,#13
#	crossover_type						#12,#13
#	  multi_point_parameterized_binary = 2			#12,#13
#	  crossover_rate = 0.8  		  		#12,#13
#	mutation_type offset_normal				#12,#13
#	  mutation_scale = 0.1					#12,#13
#	fitness_type domination_count				#12,#13
#	replacement_type below_limit = 6			#12,#13
#	  shrinkage_percentage = 0.9				#12,#13
#	convergence_type metric_tracker				#12,#13
#	  percent_change = 0.05 num_generations = 10   		#12,#13
#-----------------------------------------------------------------------
# LSQ formulations to run with text_book
#       nl2sol				#14,#15
#	nlssol_sqp			#16,#17
#	optpp_g_newton			#18,#19
#         max_iterations = 100,     	#14,#15,#16,#17,#18,#19
#         convergence_tolerance = 1e-6  #14,#15,#16,#17,#18,#19
#	linear_inequality_constraint_matrix = 1. 1.	#16,#17,#18,#19
#	linear_inequality_upper_bounds = 1.05	      	#16,#17,#18,#19
# 	linear_inequality_scale_types = 'none'		#17
# 	linear_inequality_scale_types = 'auto'		#18
# 	linear_inequality_scale_types = 'value'		#16,#19
# 	linear_inequality_scales = 2.0			#16,#19

#=======================================================================
variables,
	continuous_design = 2
#-----------------------------------------------------------------------------
# OPT and MULTIOBJ	 cyl_head
	  initial_point    1.8          1.0		#0,#1,#2,#3,#4,#5,#6
#	  initial_point    1.8          1.0		#7,#8,#9,#20,#21
	  upper_bounds     2.164        4.0	        #0,#1,#2,#3,#4,#5,#6
#	  upper_bounds     2.164        4.0	        #7,#8,#9,#20,#21
	  lower_bounds     1.5          0.0	        #0,#1,#2,#3,#4,#5,#6
#	  lower_bounds     1.5          0.0	        #7,#8,#9,#20,#21
	  scale_types      'value'      'none'	#0,#20
#	  scale_types      'value'	    'auto'	#1,#7,#8
#	  scale_types      'none'	    'auto'	#2
#	  scale_types      'log'        'none'	#3,#9
#	  scale_types      'value'	    		#4
#         scale_types      'auto'       		#5
#         scale_types      'none'       		#6
#	  scale_types      'log'        'auto'	#21
	  scales           2.0	    1.5		#0,#1,#4,#7,#8,#20
	  descriptors      'intake_dia' 'flatness'	#0,#1,#2,#3,#4,#5,#6
#	  descriptors      'intake_dia' 'flatness'	#7,#8,#9,#20,#21
#-----------------------------------------------------------------------------
# OPT and MULTIOBJ	 rosenbrock
#         initial_point   2.     2.		#10,#11
#         lower_bounds    0.1    0.1	#10,#11
#         upper_bounds    100    100  	#10,#11
#	  scale_types     'value'  'log' 	#10
#	  scales	      0.1     1.0	#10
#	  scale_types     'auto' 'value' 	#11
#	  scales	      1.0    5.0	#11
#         descriptors     'x1'   'x2'	#10,#11
#-----------------------------------------------------------------------
# JEGA
#	  initial_point      0	  0   	#12,#13
#	  upper_bounds      20  	 20	#12,#13
#	  lower_bounds     -20	-20	#12,#13
#	  scale_types	'value' 'auto'  #12
#	  scale_types	'value' 'none'  #13
#	  scales		5.0	1.0     #12,#13
#	  descriptors       'x1'    'x2'	#12,#13
#-----------------------------------------------------------------------
# LSQ
#	  initial_point    0.9      1.1	#14,#15,#16,#17,#18,#19
#	  upper_bounds     5.8      2.9	#14,#15,#16,#17,#18,#19
#	  lower_bounds     0.5     -2.9	#14,#15,#16,#17,#18,#19
#         scale_types      'log'   'none'   #14
#         scale_types      'auto'  		#16,#19
#	  scale_types      'value' 'none'	#15,#17,#18
#	  scales           2.0     1.0	#15,#17,#18
#	  descriptors      'x1'    'x2'	#14,#15,#16,#17,#18,#19

#=======================================================================
interface,
	system
# OPT and MULTIOBJ
	  analysis_driver=  'cyl_head'		#0,#1,#2,#3,#4,#5,#6,#7
#	  analysis_driver=  'cyl_head'		#8,#9,#20,#21
#	  analysis_driver=  'rosenbrock'	#10,#11
# JEGA
#	  analysis_driver = 'mogatest3'		#12,#13
# LSQ
#	  analysis_driver = 'text_book'		#14,#15,#16,#17,#18,#19

#=======================================================================
responses,
# OPT
	objective_functions = 1	#0,#1,#2,#3,#4,#5,#6,#7,#8,#9
#	objective_functions = 1	#10,#11
	  objective_function_scale_types = 'value'	#0,#3,#4,#7,#8
	  objective_function_scales = 10.0 		#0,#3,#4,#7,#8
#	  objective_function_scale_types = 'none'	#1,#2,#5,#6,#9
#	  objective_function_scale_types = 'log'	#11
	nonlinear_inequality_constraints = 3     	#0,#2,#4,#5,#6,#7
	  nonlinear_inequality_scale_types = 'value'	#0,#4
	  nonlinear_inequality_scales = 0.5  2.0  5.0	#0,#4
#	  nonlinear_inequality_scale_types = 'none'	#2,#7
#	  nonlinear_inequality_scale_types = 'value' 'none' 'none'  #5
#	  nonlinear_inequality_scale_types = 'value' 'value' 'none' #6
#	  nonlinear_inequality_scales = 0.5  1.0  1.0	#5,#6
#	nonlinear_inequality_constraints = 2     	#1,#3,#8,#9
#	  nonlinear_inequality_lower_bounds = -.2 -.2  	#1,#3,#8,#9
#	  nonlinear_inequality_upper_bounds =  .2  .2  	#1,#3,#8,#9
#	  nonlinear_inequality_scale_types  = 'auto' 'none'	#1,#9
#	  nonlinear_inequality_scale_types  = 'value' 'none'  	#3
#	  nonlinear_inequality_scale_types  = 'value' 'auto'  	#8
#	  nonlinear_inequality_scales       = 0.5 1.0		#3,#8
#	nonlinear_equality_constraints = 1		#1,#3,#8,#9
#	  nonlinear_equality_targets = -.2		#1,#3,#8,#9
#	  nonlinear_equality_scale_types  = 'value' 	#1,#9
#	  nonlinear_equality_scales  = 0.5		#1,#9
#	  nonlinear_equality_scale_types  = 'auto'  	#3
#	  nonlinear_equality_scale_types  = 'none'  	#8
	analytic_gradients		#0,#2,#4,#5,#10,#11
#	numerical_gradients		#1,#3,#6,#7
#	no_gradients			#8,#9
	no_hessians			#0,#1,#2,#3,#4,#5,#6,#7,#8,#9
#	quasi_hessians sr1		#10
#	numerical_hessians		#11
#--------------------------------------------------------------------------
# JEGA
#	objective_functions = 2				#12,#13
#	  objective_function_scale_types = 'value' 'none'   	#12
#	  objective_function_scales = 2.5  1.0			#12
#	  objective_function_scale_types = 'value'		#13
#	  objective_function_scales = 2.5  1.5 			#13
#	nonlinear_inequality_constraints = 2 		#12,#13
#	  nonlinear_inequality_upper_bounds = 0.0 0.0		#12,#13
#	  nonlinear_inequality_scale_types = 'value' 		#12
#	  nonlinear_inequality_scales =       2.0 2.5 		#12
#	  nonlinear_inequality_scale_types = 'value' 'none'  	#13
#	  nonlinear_inequality_scales =       2.0 1.0   	#13
#	no_gradients						#12,#13
#	no_hessians						#12,#13
#-----------------------------------------------------------------------
# LSQ
#	calibration_terms = 3		#14,#15
#	calibration_terms = 2		#16,#17,#18,#19
#	  least_squares_term_scale_types = 'value' 'none' 'value' #14,#15
#	  least_squares_term_scales = 2.5 1.0 2.0	          #14,#15
#	  least_squares_term_scale_types = 'value' 'none' #16,#18
#	  least_squares_term_scales      = 2.5      1.0	  #16,#18
#	  least_squares_term_scale_types = 'value'	#17,#19
#	  least_squares_term_scales = 2.5 1.5		#17,#19
#	nonlinear_inequality_constraints = 1	#16,#17,#18,#19
#	  nonlinear_inequality_scale_types = 'value'	#16,#18
#	  nonlinear_inequality_scales = 2.0		#16,#18
#	  nonlinear_inequality_scale_types = 'none'     #17,#19
#	analytic_gradients	 		#14,#16,#18
#	numerical_gradients	 		#15,#17,#19
#	no_hessians				#14,#15,#16,#17,#18,#19
#-----------------------------------------------------------------------
# MULTIOBJ
#	objective_functions = 3				#20,#21
#	objective_function_scale_types = 'value' 'value' 'none'	#20,#21
#	objective_function_scales = 2.5 1.5 1.0			#20,#21
#	multi_objective_weights = .7 .1 .1			#20,#21
#	nonlinear_inequality_constraints = 1		#20,#21
#	nonlinear_inequality_scale_types = 'none'		#20
#	nonlinear_inequality_scale_types = 'value'		#21
#	nonlinear_inequality_scales = 5.0			#21
#	numerical_gradients					#20
#	  method_source dakota					#20
#	  interval_type central					#20
#	  fd_gradient_step_size = 1.e-4				#20
#	no_gradients						#21
#	no_hessians						#20,#21
