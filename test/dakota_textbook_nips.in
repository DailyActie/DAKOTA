# DAKOTA INPUT FILE - dakota_textbook_nips.in

# Each DAKOTA test file is capable of running multiple tests. The
# manual process for doing this is to add or uncomment specific lines
# needed for a test and comment out other lines which are not needed
# for that specific test.  Within the automatic test script, a special
# syntax is used to automatically determine which lines are to be used
# for a specific test. A #n (0 - 9) is used to associate lines in the
# test file with a specific test.  The #0 is used to designate lines
# which are to be run as part of the baseline test but not part of the
# other tests. To add multiple tests to a file add the #n to the
# trailing comment of a line, the dakota_test script will parse
# through the file uncommenting the lines marked for a specific test,
# and commenting out unneeded lines marked with the #0. Specific lines
# can be included in multiple tests by adding multiple #n designaters
# seperated by a comma.

method,
	optpp_q_newton,			#0,#1
#	optpp_fd_newton			#2,#3
#	optpp_newton			#4
#	optpp_g_newton			#5
#	nlssol_sqp			#6
#       nl2sol                          #7,#8
	  merit_function = 'el_bakry'	#0,#1,#2,#3,#4,#5
	  max_iterations = 50
	  convergence_tolerance = 1e-8
#	  linear_inequality_constraint_matrix = 1. 1.	#5,#6
#	  linear_inequality_upper_bounds = 1.05	      	#5,#6
#	  output debug

variables,
	continuous_design = 2
	  initial_point    0.9    1.1
	  upper_bounds     5.8    2.9
	  lower_bounds     0.5   -2.9
	  descriptors      'x1'   'x2'

interface,
	system
	  analysis_driver = 'text_book'
	  parameters_file = 'text_book.in'
	  results_file    = 'text_book.out'
	  file_tag #file_save

responses,
	objective_functions = 1			#0,#1,#2,#3,#4
	nonlinear_inequality_constraints = 2	#0,#1,#2,#3,#4
#	calibration_terms = 2			#5,#6
# 	calibration_terms = 3			#7,#8
#         calibration_data_file = 'least_squares_test.dat' #7
# 	    freeform  #7
#         calibration_data_file = 'least_squares_test.ann' #8
#	nonlinear_inequality_constraints = 1	#5,#6
	analytic_gradients	 			#0,#2,#4,#5,#6,#7,#8
#	numerical_gradients	        		#1,#3
#	  method_source vendor	        		#1,#3
#	  interval_type forward	        		#1,#3
#	  fd_gradient_step_size = 1.e-5	 	 	#1,#3
	no_hessians					#0,#1,#2,#3,#5,#6,#7,#8
#	analytic_hessians				#4

