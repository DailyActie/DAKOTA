## DAKOTA INPUT FILE - dakota_var_views_dace.in

# This file contains tests of the variable views override capability
# in the context of DACE methods.  It covers continuous variables
# (discrete are covered in another test set) and considers only
# default and 'active all' views to catch the most egregious problems.
# Mix-and-match tests will be captured separately.

method,
        dace oas seed = 5				#0,#7
          samples = 49 symbols = 7			#0,#7
#       fsu_quasi_mc halton    	 			#1,#8
#	  samples = 50					#1,#8
#       psuade_moat  					#2,#9
#         samples = 84					#2,#9
#         partitions = 3				#2,#9
#         seed = 50270 					#2,#9
#       vector_parameter_study				#3,#10
#         step_vector = .1 .1				#3
#         step_vector = .1 .1 .1 .1 .1 .1 .1 .1		   #10
#	  num_steps = 4	   				#3,#10
#       list_parameter_study				#4,#11
#         list_of_points = 1.1 1.2 1.3 1.4 1.5 1.6	#4,#11
#                          1.7 1.8 1.9 2.0 2.1 2.2	#4,#11
#         		   1.1 1.2 1.3 1.4 1.5 1.6	   #11
#                          1.7 1.8 1.9 2.0 2.1 2.2	   #11
#         		   1.1 1.2 1.3 1.4 1.5 1.6	   #11
#                          1.7 1.8 1.9 2.0 2.1 2.2	   #11
#         		   1.1 1.2 1.3 1.4 1.5 1.6	   #11
#                          1.7 1.8 1.9 2.0 2.1 2.2	   #11
#       centered_parameter_study       	       		#5,#12
#         step_vector = .05 .05				#5
#         step_vector = .05 .05	.05 .05 .05 .05 .05 .05	   #12
#         steps_per_variable = 5			#5,#12
#       multidim_parameter_study			#6,#13
#         partitions = 2				#6,#13

variables,
#	active all			#7,#8,#9,#10,#11,#12,#13
	continuous_design = 2
	  initial_point     0.   0.
	  upper_bounds      2.   2.
	  lower_bounds     -2.  -2.
	  descriptors      'x1' 'x2'
	uniform_uncertain = 2
	  upper_bounds      3.   3.	#0,#1,#2,#3,#4,#5,#6
	  lower_bounds     -1.  -1.	#0,#1,#2,#3,#4,#5,#6
#	  upper_bounds      2.   2.	#7,#8,#9,#10,#11,#12,#13
#	  lower_bounds     -2.  -2.	#7,#8,#9,#10,#11,#12,#13
	  descriptors      'x3' 'x4'
	interval_uncertain = 2
	  num_intervals     1    1
	  interval_probs    1.   1.
	  upper_bounds      3.   3.	#0,#1,#2,#3,#4,#5,#6
	  lower_bounds     -1.  -1.	#0,#1,#2,#3,#4,#5,#6
#	  upper_bounds      2.   2.	#7,#8,#9,#10,#11,#12,#13
#	  lower_bounds     -2.  -2.	#7,#8,#9,#10,#11,#12,#13
	  descriptors      'x5' 'x6'
	continuous_state = 2
	  initial_state     1.   1.	#0,#1,#2,#3,#4,#5,#6
	  upper_bounds      3.   3.	#0,#1,#2,#3,#4,#5,#6
	  lower_bounds     -1.  -1.	#0,#1,#2,#3,#4,#5,#6
#	  initial_state     0.   0.	#7,#8,#9,#10,#11,#12,#13
#	  upper_bounds      2.   2.	#7,#8,#9,#10,#11,#12,#13
#	  lower_bounds     -2.  -2.	#7,#8,#9,#10,#11,#12,#13
	  descriptors      'x7' 'x8'

interface,
	fork
	  analysis_driver =       'text_book'

responses,
	objective_functions = 1
	nonlinear_inequality_constraints = 2
	no_gradients
	no_hessians
