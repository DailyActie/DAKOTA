##  DAKOTA INPUT FILE - dakota_mogatest1.in #0

#  This sample Dakota input file optimizes the MOP2 problem defined on
#  page 5-13 of David Van Veldhuizen's Ph.D. thesis at the Air Force
#  Institute of Technology, titled "Multiobjective Evolutionary
#  Algorithms: Classifications, Analyses, and New Innovations.
 
# timeout overrides: 0=TD360, 1=TD360, 2=TD360, 3=TD360

environment,
	graphics tabular_graphics_data

method,
        moga                                            #0,#1,#2,#4,#5,#6,#7
#       soga                                            #3
	output silent 
        seed = 10983
        final_solutions = 3
	max_function_evaluations = 2500			#0,#4,#5,#6,#7
#	max_function_evaluations = 3000			#1,#3
#	max_function_evaluations = 2000			#2
	initialization_type unique_random
	crossover_type shuffle_random			#0,#3,#4,#5,#6,#7
	  num_offspring = 2 num_parents = 2		#0,#3,#4,#5,#6,#7
#	crossover_type					#1,#2
#	  multi_point_parameterized_binary = 2		#1,#2
	  crossover_rate = 0.8
	mutation_type replace_uniform			#0,#1,#4,#5,#6,#7
	  mutation_rate = 0.1				#0,#1,#4,#5,#6,#7
#	mutation_type offset_normal			#2,#3
#	  mutation_scale = 0.1				#2,#3
	fitness_type domination_count                   #0,#1,#2,#4,#5,#6,#7
	replacement_type below_limit = 6                #0,#1,#2,#4,#5,#6,#7
	  shrinkage_percentage = 0.9                    #0,#1,#2,#4,#5,#6,#7
#       replacement_type favor_feasible                 #3
	convergence_type metric_tracker                 #0,#1,#2,#4,#5,#6,#7
	  percent_change = 0.05 num_generations = 40    #0
#	  percent_change = 0.05 num_generations = 10    #1,#2,#4,#5,#6,#7
#	niching_type radial 0.02 0.05		  	#5
#	niching_type distance 0.02 0.05		  	#6
#	niching_type max_designs 0.02 0.05	  	#7
#	  num_designs = 6	      			#7
   
variables,
	continuous_design = 3				#0
	  initial_point     0     	 0	 0	#0
	  upper_bounds      4  	 4	 4	#0
	  lower_bounds     -4	-4	-4	#0
	  descriptors      'x1'  	'x2'	'x3'	#0,#4,#5,#6,#7
#	continuous_design = 2				#1,#2,#3
#	  initial_point    0.5     	0.5		#1
#	  upper_bounds     1  	1		#1
#	  lower_bounds     0	0		#1
#	  descriptors      'x1'  	'x2'		#1,#2,#3
#	  initial_point      0	  0    		#2
#	  upper_bounds      20  	 20		#2
#	  lower_bounds     -20	-20		#2
#	  upper_bounds      2.	2.		#3
#	  lower_bounds     -2.	-2.		#3
#       discrete_design_set                     #4,#5,#6,#7
#	  integer = 3              		#4,#5,#6,#7
#	    initial_point     0    0	 0	#4,#5,#6,#7
#	    num_set_values = 5 5 5              #4,#5,#6,#7
#             set_values = -4 -2 0 2 4 -4 -2 0 2 4 -4 -2 0 2 4 	#4,#5,#6,#7

interface,
	fork                                    #0,#1,#2,#4,#5,#6,#7
#	direct                                  #3
	  analysis_driver = 'mogatest1'			#0,#4,#5,#6,#7
#	  analysis_driver = 'mogatest2'			#1
#	  analysis_driver = 'mogatest3'			#2
#	  analysis_driver = 'rosenbrock'		#3

responses,
	objective_functions = 2                     #0,#1,#2,#4,#5,#6,#7
#  	objective_functions = 1                     #3
#	nonlinear_inequality_constraints = 2  	#2
#	nonlinear_inequality_upper_bounds = 0.0 0.0	#2
	no_gradients
	no_hessians
