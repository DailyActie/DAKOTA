# dakota_library_mode.in: tests for DAKOTA's library mode, with various
# input and parallelism specifications (requires dakota_library_mode binary)

# -------------------------
# serial tests (rosenbrock)
# -------------------------
# test 0: parsed input file (library mode 1)
# override dakota command; leave input file as dakota_library_mode.in
# 0=D'dakota_library_mode', 0=Rn

# test 1: direct data object insertion (library mode 2)
# override dakota command; override input file to none
# 1=D'dakota_library_mode', 1=I'', 1=Rn

# test 2: mixed mode with an input file (library mode 3)
# override dakota command; leave input file as dakota_library_mode.in
# 2=D'dakota_library_mode -m', 2=Rn

# test 3: mixed mode using default input string (library mode 3)
# override dakota command; override input file to none
# 3=D'dakota_library_mode -m', 3=I'', 3=Rn

# --------------------------
# parallel tests (text_book)
# --------------------------
# Same test suite as above:
# p0=D'dakota_library_mode', p0=Rn
# p1=D'dakota_library_mode', p1=I'', p1=Rn
# p2=D'dakota_library_mode -m', p2=Rn
# p3=D'dakota_library_mode -m', p3=I'', p3=Rn

# Processor counts:
# p0=2,p1=2,p2=2,p3=2

method,
	optpp_q_newton
	  max_iterations = 50
	  convergence_tolerance = 1e-5

variables,
	continuous_design = 2
	  descriptors     'x1' 'x2'

interface,
	direct
	  analysis_driver = 'plugin_rosenbrock'		#0,#1,#2,#3
#	  analysis_driver = 'plugin_text_book'		#p0,#p1,#p2,#p3

responses,
	objective_functions = 1
#	nonlinear_inequality_constraints = 2	#p0,#p1,#p2,#p3
	analytic_gradients
	no_hessians
